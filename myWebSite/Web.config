<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    注意: 除了手动编辑此文件以外，您还可以使用 
    Web 管理工具来配置应用程序的设置。可以使用 Visual Studio 中的
     “网站”->“Asp.Net 配置”选项。
    设置和注释的完整列表在 
    machine.config.comments 中，该文件通常位于 
    \Windows\Microsoft.Net\Framework\v2.x\Config 中
-->
<configuration>
  <appSettings>
    <add key="ConnectionString" value="server=JS-DIANQI\SQLEXPRESS;database=mySQL;uid=sa;pwd=1234" />
  </appSettings>
  <connectionStrings>
    <add name="LocalSqlServer" connectionString="server=JS-DIANQI\SQLEXPRESS;database=mySQL;uid=sa;pwd=1234;" />
    <add name="mySQLConnectionString" connectionString="Data Source=JS-DIANQI\SQLEXPRESS;Initial Catalog=mySQL;User ID=sa;Password=1234" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <!--
    有关 web.config 更改的说明，请参见 http://go.microsoft.com/fwlink/?LinkId=235367。

    可在 <httpRuntime> 标记上设置以下特性。
      <system.Web>
        <httpRuntime targetFramework="4.6" />
      </system.Web>
  -->
  <system.web>
    <!-- 
            设置 compilation debug="true" 可将调试符号插入
            已编译的页面中。但由于这会 
            影响性能，因此只在开发过程中将此值 
            设置为 true。
        -->
    <compilation debug="true" targetFramework="4.6">
      <assemblies>
        <add assembly="System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
      </assemblies>
    </compilation>
    <webServices>
      <protocols>
        <add name="HttpSoap" />
        <add name="HttpPost" /> --&gt;
        <add name="HttpGet" />
        <add name="Documentation" />
        <add name="HttpPostLocalhost" />
      </protocols>
    </webServices>
    <!--
            通过 <authentication> 节可以配置 ASP.NET 用来 
            识别进入用户的
            安全身份验证模式。 
        -->
    <authentication mode="Forms" />
    <!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，
            开发人员通过该节可以配置
            要显示的 html 错误页
            以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID" />
  </system.web>
  <system.webServer>
    <!--<httpProtocol>
      <customHeaders>
        <add name="Access-Control-Allow-Origin" value="*" />
        <add name="Access-Control-Allow-Headers" value="Content-Type" />
        <add name="Access-Control-Allow-Methods" value="GET, POST, PUT, DELETE, OPTIONS" />
      </customHeaders>
    </httpProtocol>-->

    <defaultDocument>
      <files>
        <clear />
                <add value="monitor/index.html" />
        <add value="login.aspx" />
        <add value="default.aspx" />
        <add value="Default.htm" />
        <add value="Default.asp" />
        <add value="index.htm" />
        <add value="index.html" />
        <add value="iisstart.htm" />
      </files>
    </defaultDocument>
        <staticContent>
            <mimeMap fileExtension=".gexf" mimeType="text/xml" />
        </staticContent>
        <security>
            <requestFiltering>
                <fileExtensions>
                    <add fileExtension=".gexf" allowed="true" />
                    <add fileExtension=".xml" allowed="true" />
                </fileExtensions>
            </requestFiltering>
        </security>
        <httpProtocol>
            <customHeaders>
                <remove name="Access-Control-Allow-Origin" />
                <add name="Access-Control-Allow-Origin" value="*" />
            </customHeaders>
        </httpProtocol>
  </system.webServer>
  <!-- 
        在 Internet 信息服务 7.0 下运行 ASP.NET AJAX 需要 system.webServer
        节。对早期版本的 IIS 来说则不需要此节。
    -->
</configuration>